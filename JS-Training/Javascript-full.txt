######
##JS##
######

Javascript language basics

brackets extension > autosavefiles on window blur

# js is a lightweight, cross platform, object based language. Client side.
# add interactivity and web apps

HTML - content
CSS3 - presentation
JS - dynamic effects/programming

######################
Putting JS on the page
######################

linking to external JS files
<script src="myfile.js"></script>

adding js to the page
<script>
console.log("hello world!");
</script>

########################
Variables and data types
########################

a variable is a container to store a value that can be used again and again in your code

var name ='John'
console.log(name);

var lastName ="Smith";
console.log(lastName);

var age = 26;
console.log(age);

var fullAge = true;
console.log(fullAge);

### 5 data types

Number = numbers, decimals and integers
String = Sequence of text Characters
Boolean = Logical data type that is either true or false
Undefined = Data type variable that does not have a value yet
Null = means 'non-existent'

#################################
Changing variables and data types
#################################

var name = 'John';
var age = 26;

console.log (name + age); // adds two variables together
# John26

// this is also and example of type coercion where JS converts a data type to another to display a result i.e number to a string

console.log(age + age); // adds two numbers together
# 52

var job, isMarried;

console.log(job);  // as this variable is not defined it will come up as undefined

job = teacher;
isMarried = true; // you can define the variables after setting them earlier in the document

console.log(name + ' is ' + age + ' and a ' + 'teacher' + ' .Is he married? ' + isMarried + '.');  
// this will display the variables and strings and define them as a string (type coercion) spaces are added between the variables by adding ' content ' and + symbols next to the variables

You can change variables (variable mutation) after they've been defined by typing the variable name and adding a value. This can be displayed by running console.log

age = 'thirty six';
job = 'driver';

console.log(name + ' is ' + age + ' and a ' + 'teacher' + ' .Is he married? ' + isMarried + '.');

#########################################################
Creating a message and printing the result to the console
#########################################################

var newMessage = prompt('what is your name?'); //store the prompt in a variable
console.log(newMessage);

##########################################
creating a pop up box to display a message
##########################################

alert (name + ' is ' + age + ' and a ' + 'teacher' + ' .Is he married? ' + isMarried + '.'); // alert is used to replace console.log

#########
Operators
#########

var thisYear = 2016;
var birthYear = thisYear - 26;

birthYear = thisYear * 2; //operator preceedence certain operators run left to right some run right to left. In this case the preedence is right to left.

console.log(birthYear);


var ageJohn = 30;
var ageMark = 30;
// store 2 variables

ageJohn = 3 + 5 * 4 - 6;
// change ageJohn variable
// the preedence of this would be 5 * 4 + 3 - 6 it will equal 18

ageJohn = (3 + 5) * 4 - 6;
// change ageJohn variable
// the preedence of this would be 3 + 5 * 4 - 6 it will equal 26
// this is because calculations in parenthesis have a hight preedence

ageJohn++;
// change ageJohn variable
// this increments the age of john by one year

ageMark *= 2;
// change ageMark variable
// multiples the age of Mark by 2

console.log(ageJohn);
27
console.log(ageMark);
60

#######################
if  / else statements
#######################

var name = 'john';
var age = 52;
var isMarried = 'no';

if (isMarried === 'yes') {
console.log(name + ' is married');
} else {
console.log(name + ' will hopefully marry soon');

}

//the text within the parenthesis is called the condition. When using a string you a running a comparrison operator

var name = 'john';
var age = 52;
var isMarried = true;

if (isMarried) {
console.log(name + ' is married');
} else {
console.log(name + ' will hopefully marry soon');

}

//this example uses a boolean instead of a string in the program. With a boolean you dont need a comparrison operator

== this does type coercison
=== this does not 

if (23 == '23'){
console.log('hello');
}
// the number and the string will be read as the same, this will be defined as true, type coercion


if (23 === '23'){
console.log('hello');
}
// will not run, it will be defined as false

//it is safer to use ===

##################################
Boolean logic and switch statments
##################################

var age = 16;

if (age < 20 ) {
console.log('John is a teenager');
} else {
console.log('John is a man')
}

# using the less operator

<= less than or equal to
< less than

# using boolean logic, computer science

and and or operators

# AND operator

AND(&&) true if ALL are true

                    Var A
            AND     TRUE    FALSE
Var B       TRUE    TRUE    FALSE
            FALSE   FALSE   FALSE
            
// This statement runs a comparisson between variables to determine if they are true or false. There is only one true outcome in this example that is that if variable A and B are true.


# OR operator

OR(||) true if one is true

                    Var A
            AND     TRUE    FALSE
Var B       TRUE    TRUE    TRUE
            FALSE   TRUE    FALSE
            
// This statment runs a comparison between variables and displays a result if one of the variables meets the condition. Therefore if variable B is false yet variable A is true the answer still remains true.
            

# NOT operator
            
# NOT(!) inverst true/false value   

// This switches the logic round so if Var A is true it becomes false


// therefore the following statements, based on the age variable of 16 calculate as follows

age >= 30;  // false
age < 30;  //true
!(age < 30);  //false

age >= 20 && age < 30  //false
age  >= 20 || age < 30;  //true


# using the && statement

var age = 32;
if (age > 20 && age < 30){
    console.log("John is a young man");
}else if (age > 31 && age < 60){
    console.log("john is and adult under 60");
}
else {
    console.log("John is over 30");
}


// in the example above the && statement is used, the answer will be true on both counts based on the age variable of 32

# using the switch statement


var job ='teacher';

job = prompt("what does John do?");

switch (job) {
    case 'teacher':
        console.log('John teaches kids.');
        break;
    case 'driver':
        console.log('John drives a cab.');
        break;
    case 'policeman':
        console.log('John is a policeman.');
        break;
    default:
        console.log('John does something else.');
}

// the above is another way of writing the if/else statement.
// a variable of teacher is set then a pop up box is generated to ask a question.
//when the answer is submitted  if one of the following cases match then the corresponding result is displayed. Or the default result is displayed.

###########
challenge 1
###########


var nameOne = "Jack";
var nameTwo = "Simon";
var nameThree = "Sue";
var heightOne = 120;
var heightTwo = 120;
var heightThree = 120;
var jackHeight = heightOne * 5;
var simonHeight = heightTwo * 5;
var sueHeight = heightThree * 5;

if (sueHeight > simonHeight && jackHeight) {
    console.log(nameThree + " is the winnner, the height is " + sueHeight + "cms");
}else if (jackHeight > sueHeight && simonHeight){
    console.log(nameOne + " is the winnner, the height is " + jackHeight + "cms");
}else if (simonHeight > sueHeight && jackHeight){
     console.log(nameTwo + " is the winnner, the height is " + simonHeight + "cms");
}else
    console.log("All heights are the same");

// take one individual and times their height by 5, then compare it against two others and show the winning result to the console 


###########
challenge 2
###########


var ageMike = 93;
var ageGeoff = 93;
var ageJack = 93;


if (ageMike > ageGeoff && ageMike > ageJack) {
    console.log("Mike\'s age " + ageMike + " is larger than Jack and Geoff\'s age");
} else if (ageGeoff > ageMike && ageGeoff > ageJack) {
    console.log("Geoff\'s age " + ageGeoff + " is larger than Jack and Mike\'s age");
} else if (ageJack > ageMike && ageJack > ageGeoff) {
    console.log("Jack\'s age " + ageJack + " is larger than Geoff and Mike\'s age");
} else console.log("It\'s a draw");

// compare more than two variables to see which is the greatest



###############
Functions
###############

###############
One parameter
###############


Use functions to avoid repetition 

function calculateAge(yearOfBirth) {
    var age = 2016 - yearOfBirth;
    return age;
}

var johnAge = calculateAge(1990);
var sueAge = calculateAge(1934);
var mickAge = calculateAge(1981);

console.log(johnAge);

// Name a function like you do with a variable 
// Add a parameter within the brackets that can be called outside the function this function passes one value to the parameter so has just one name
// Create a variable outside the function that is equal to the function name and contains data within the brackets, in this case 1990
// console.log the variable name to display result


###############
Two parameters
###############


function yearsUntilRetirement(name, year) {
    var age = calculateAge(year);
    var retirement = 67 - age;

    if (retirement >= 0) {
        console.log(name + ' retires in ' + retirement + ' years.');
    } else {
        console.log(name + ' is already retired');
    }
}

yearsUntilRetirement('Andy', 1974);
yearsUntilRetirement('Mike', 1963);
yearsUntilRetirement('Mary', 1948);

// We already have the function to work out the year of birth 
// the second function works out the year of retirement
// 1. the name string and year variables are passed into the parameter
// 2. create a variable called age to carry across the caculateAge function and apply the year
// 3. create another variable called retirement that subtracts the above age variable from 65
// 4. create an if statement to console.log two different messages depending on if the person has retired or not

